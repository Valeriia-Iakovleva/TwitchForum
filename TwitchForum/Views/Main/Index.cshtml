@using TwitchForum.Models
@using PagedList.Mvc;
@model MainViewModel
@{
    ViewBag.Title = "Index";
}

<div class="body-ground">
    <div class="container first-page ">
        <div class="img-fluid row py-lg-5"> <img src="~/Content/img/Twitch_Forum.png" /></div>

        <div class="row py-lg-5" d-flex justify-content-center">

            @using (Html.BeginForm("Index", "Main", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "input-group col-sm-7 input-group-lg ", role = "form" }))
            {
                @Html.AntiForgeryToken()
                <div class="input-group  justify-content-center">
                    <input type="search" class="form-control search-border p-3" />
                    <button class="btn btn-outline-secondary search-border p-3" type="submit"><img width="20px" height="20px" src="https://img.icons8.com/external-dreamstale-lineal-dreamstale/452/external-search-ui-dreamstale-lineal-dreamstale.png"></button>
                </div>
            }
        </div>
    </div>
</div>
<div class="container ">
    <div class="row justify-content-evenly">
        <div class="col-md-8 accordion-body">
            <h2>Chat</h2>
            <div class="container">
                <ul id="discussion">
                    @foreach (var item in Model.Messages)
                    {
                        <li>
                            @Html.DisplayFor(modelItem => item.Text)
                        </li>

                    }
                </ul>
                @if (Request.IsAuthenticated)
                {
                    <input type="text" id="message" />
                    <input type="button" id="sendmessage" value="Send" />
                    <input type="hidden" id="displayname" />
                }
                Страница @(Model.Messages.PageCount < Model.Messages.PageNumber ? 0 : Model.Messages.PageNumber) из @Model.Messages.PageCount

                @Html.PagedListPager(Model.Messages, page => Url.Action("Index", new { page }))
            </div>
            @section scripts {
                <!--Script references. -->
                <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
                <!--Reference the SignalR library. -->
                <script src="~/Scripts/jquery.signalR-2.4.2.min.js"></script>
                <!--Reference the autogenerated SignalR hub script. -->
                <script src="~/signalr/hubs"></script>
                <!--SignalR script to update the chat page and send messages.-->
                <script>
                    $(function () {
                        // Reference the auto-generated proxy for the hub.
                        var chat = $.connection.chatHub;
                        // Create a function that the hub can call back to display messages.
                        chat.client.addNewMessageToPage = function (name, message) {
                            // Add the message to the page.
                            $('#discussion').append('<li><strong>' + htmlEncode(name)
                                + '</strong>: ' + htmlEncode(message) + '</li>');
                        };
                        chat.client.addMenegerMessageToPage = function (name, message) {
                            // Add the message to the page.
                            $('#discussion').append('<li class = "toast fade show"><div class ="toast-header">' + htmlEncode(name)
                                + '</div>: ' + '<div class ="toast-body">' + htmlEncode(message) + '</div>: ' + '</li>');
                        };
                        // Get the user name and store it to prepend to messages.
                        $('#displayname').val();
                        // Set initial focus to message input box.
                        $('#message').focus();
                        // Start the connection.
                        $.connection.hub.start().done(function () {
                            $('#sendmessage').click(function () {
                                // Call the Send method on the hub.
                                chat.server.send($('#displayname').val(), $('#message').val());
                                // Clear text box and reset focus for next comment.
                                $('#message').val('').focus();
                            });
                        });
                    });
                    // This optional function html-encodes messages for display in the page.
                    function htmlEncode(value) {
                        var encodedValue = $('<div />').text(value).html();
                        return encodedValue;
                    }
                </script>
            }
        </div>
        <div class="col-6 col-md-4">
        </div>
    </div>
</div>